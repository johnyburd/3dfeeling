{"version":3,"sources":["../src/GridLoader.jsx"],"names":["random","top","Math","propTypes","loading","bool","color","string","size","oneOfType","number","margin","verticalAlign","ptKeys","Object","keys","getSize","animation","Ball","div","GridLoader","props","style","width","parseFloat","fontSize","klen","length","i","ballProps","reduce","acc","key","Array","from","map","_","defaultProps"],"mappings":"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","file":"GridLoader.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\n\n/**\n * @param  {Number} top\n * @return {Number}\n */\nfunction random(top) {\n  return Math.random() * top\n}\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  margin: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  verticalAlign: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n\nconst ptKeys = Object.keys(propTypes)\n\nconst getSize = size => typeof size === 'number' ? `${size}px` : size\n\nconst animation = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.5);\n    opacity: 0.7;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n`\n\nconst Ball = styled.div`\n  background-color: ${({ color }) => color};\n  width: ${({ size }) => getSize(size)};\n  height: ${({ size }) => getSize(size)};\n  margin: ${({ margin }) => getSize(margin)};\n  border-radius: 100%;\n  vertical-align: ${({ verticalAlign }) => getSize(verticalAlign)};\n  animation: ${animation} ${() => (random(100) / 100) + 0.6}s ${() => (random(100) / 100) - 0.2}s infinite ease;\n  animation-fill-mode: both;\n  display: inline-block;\n  border: 0px solid transparent;\n`\n\nexport default class GridLoader extends Component {\n  static propTypes = propTypes;\n\n  static defaultProps = {\n    loading: true,\n    color: '#ffffff',\n    size: '15px',\n    margin: '2px',\n  }\n\n  render() {\n    const { loading } = this.props\n\n    if (loading) {\n      const style = {\n        width: (parseFloat(this.props.size) * 3) + parseFloat(this.props.margin) * 6,\n        fontSize: 0,\n      }\n\n      const props = { ...this.props }\n\n      if (propTypes && ptKeys) {\n        const klen = ptKeys.length\n        for (let i = 0; i < klen; i++) {\n          delete props[ptKeys[i]]\n        }\n      }\n\n      const ballProps = ptKeys.reduce((acc, key) => (key === 'loading' ? acc : {\n        ...acc,\n        [key]: this.props[key],\n      }), {})\n\n      return (\n        <div {...props}>\n          <div style={style}>\n            {\n              Array.from({ length: 9 }).map((_, i) => (\n                <Ball key={i} {...ballProps} idx={i + 1} />\n              ))\n            }\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n"]}