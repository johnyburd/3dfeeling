{"version":3,"sources":["../src/ScaleLoader.jsx"],"names":["propTypes","loading","bool","color","string","height","oneOfType","number","width","margin","radius","verticalAlign","ptKeys","Object","keys","getSize","size","animation","Line","div","idx","ScaleLoader","props","assign","klen","length","i","lineProps","reduce","acc","key","Array","from","map","_","defaultProps"],"mappings":"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","file":"ScaleLoader.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  color: PropTypes.string,\n  height: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  width: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  margin: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  radius: PropTypes.string,\n  verticalAlign: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n\nconst ptKeys = Object.keys(propTypes)\n\nconst getSize = size => typeof size === 'number' ? `${size}px` : size\n\nconst animation = keyframes`\n  0% {\n    transform: scaley(1.0);\n  }\n\n  50% {\n    transform: scaley(0.4);\n  }\n\n  100% {\n    transform: scaley(1.0);\n  }\n`\n\nconst Line = styled.div`\n  background-color: ${({ color }) => color};\n  width: ${({ width }) => getSize(width)};\n  height: ${({ height }) => getSize(height)};\n  margin: ${({ margin }) => getSize(margin)};\n  border-radius: ${({ radius }) => getSize(radius)};\n  vertical-align: ${({ verticalAlign }) => getSize(verticalAlign)};\n  animation: ${animation} 1s ${({ idx }) => idx * 0.1}s infinite cubic-bezier(.2,.68,.18,1.08);\n  animation-fill-mode: both;\n  display: inline-block;\n  border: 0px solid transparent;\n`\n\nexport default class ScaleLoader extends Component {\n  /**\n   * @type {Object}\n   */\n  static propTypes = propTypes;\n\n  static defaultProps = {\n    loading: true,\n    color: '#fff',\n    height: '35px',\n    width: '4px',\n    margin: '2px',\n    radius: '2px',\n  }\n\n  render() {\n    const { loading } = this.props\n\n    if (loading) {\n      const props = Object.assign({}, this.props)\n\n      if (propTypes && ptKeys) {\n        const klen = ptKeys.length\n        for (let i = 0; i < klen; i++) {\n          delete props[ptKeys[i]]\n        }\n      }\n\n      const lineProps = ptKeys.reduce((acc, key) => (key === 'loading' ? acc : {\n        ...acc,\n        [key]: this.props[key],\n      }), {})\n\n      return (\n        <div {...props}>\n          {\n            Array.from({ length: 5 }).map((_, i) => (\n              <Line key={i} {...lineProps} idx={i + 1} />\n            ))\n          }\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n"]}