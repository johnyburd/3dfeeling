{"version":3,"sources":["../src/SquareLoader.jsx"],"names":["propTypes","loading","bool","color","string","size","oneOfType","number","margin","verticalAlign","ptKeys","Object","keys","getSize","animation","Square","div","SquareLoader","props","assign","klen","length","i","squareProps","reduce","acc","key","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAY;AAChBC,WAAS,oBAAUC,IADH;AAEhBC,SAAO,oBAAUC,MAFD;AAGhBC,QAAM,oBAAUC,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB,CAHU;AAIhBI,UAAQ,oBAAUF,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB,CAJQ;AAKhBK,iBAAe,oBAAUH,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB;AALC,CAAlB;;AAQA,IAAMM,SAASC,OAAOC,IAAP,CAAYZ,SAAZ,CAAf;;AAEA,IAAMa,UAAU,SAAVA,OAAU;AAAA,SAAQ,OAAOR,IAAP,KAAgB,QAAhB,GAA8BA,IAA9B,UAAyCA,IAAjD;AAAA,CAAhB;;AAEA,IAAMS,6DAAN;;AAkBA,IAAMC,SAAS,2BAAOC,GAAhB,mBACgB;AAAA,MAAGb,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CADhB,EAEK;AAAA,MAAGE,IAAH,SAAGA,IAAH;AAAA,SAAcQ,QAAQR,IAAR,CAAd;AAAA,CAFL,EAGM;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcQ,QAAQR,IAAR,CAAd;AAAA,CAHN,EAIc;AAAA,MAAGI,aAAH,SAAGA,aAAH;AAAA,SAAuBI,QAAQJ,aAAR,CAAvB;AAAA,CAJd,EAMSK,SANT,CAAN;;IAYqBG,Y;;;;;;;;;;;;AACjB;;;6BAWO;AAAA;;AAAA,UACChB,OADD,GACa,KAAKiB,KADlB,CACCjB,OADD;;;AAGP,UAAIA,OAAJ,EAAa;AACX,YAAMiB,QAAQP,OAAOQ,MAAP,CAAc,EAAd,EAAkB,KAAKD,KAAvB,CAAd;;AAEA,YAAIlB,aAAaU,MAAjB,EAAyB;AACvB,cAAMU,OAAOV,OAAOW,MAApB;AACA,eAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,IAApB,EAA0BE,GAA1B,EAA+B;AAC7B,mBAAOJ,MAAMR,OAAOY,CAAP,CAAN,CAAP;AACD;AACF;;AAED,YAAMC,cAAcb,OAAOc,MAAP,CAAc,UAACC,GAAD,EAAMC,GAAN;AAAA,iBAAeA,QAAQ,SAAR,GAAoBD,GAApB,gBAC5CA,GAD4C,sBAE9CC,GAF8C,EAExC,OAAKR,KAAL,CAAWQ,GAAX,CAFwC,EAAf;AAAA,SAAd,EAGhB,EAHgB,CAApB;;AAKA,eACE;AAAA;AAASR,eAAT;AACE,wCAAC,MAAD,EAAYK,WAAZ;AADF,SADF;AAKD;;AAED,aAAO,IAAP;AACD;;;;;;AAtCkBN,Y,CAIZjB,S,GAAYA,S;AAJAiB,Y,CAMZU,Y,GAAe;AACpB1B,WAAS,IADW;AAEpBE,SAAO,SAFa;AAGpBE,QAAM;AAHc,C;kBANHY,Y","file":"SquareLoader.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  margin: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  verticalAlign: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n\nconst ptKeys = Object.keys(propTypes)\n\nconst getSize = size => typeof size === 'number' ? `${size}px` : size\n\nconst animation = keyframes`\n  25% {\n    transform: rotateX(180deg) rotateY(0);\n  }\n\n  50% {\n    transform: rotateX(180deg) rotateY(180deg);\n  }\n\n  75% {\n    transform: rotateX(0) rotateY(180deg);\n  }\n\n  100% {\n    transform: rotateX(0) rotateY(0);\n  }\n`\n\nconst Square = styled.div`\n  background-color: ${({ color }) => color};\n  width: ${({ size }) => getSize(size)};\n  height: ${({ size }) => getSize(size)};\n  vertical-align: ${({ verticalAlign }) => getSize(verticalAlign)};\n  perspective: 100px;\n  animation: ${animation} 3s 0s infinite cubic-bezier(.09,.57,.49,.9);\n  animation-fill-mode: both;\n  display: inline-block;\n  border: 0px solid transparent;\n`\n\nexport default class SquareLoader extends Component {\n    /**\n     * @type {Object}\n     */\n  static propTypes = propTypes;\n\n  static defaultProps = {\n    loading: true,\n    color: '#ffffff',\n    size: '50px',\n  }\n\n  render() {\n    const { loading } = this.props\n\n    if (loading) {\n      const props = Object.assign({}, this.props)\n\n      if (propTypes && ptKeys) {\n        const klen = ptKeys.length\n        for (let i = 0; i < klen; i++) {\n          delete props[ptKeys[i]]\n        }\n      }\n\n      const squareProps = ptKeys.reduce((acc, key) => (key === 'loading' ? acc : {\n        ...acc,\n        [key]: this.props[key],\n      }), {})\n\n      return (\n        <div {...props}>\n          <Square {...squareProps} />\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n"]}